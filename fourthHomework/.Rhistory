library(stringr)
words
length(words)
library("xelatex")
tinytex::install_tinytex()
str_count(words, regexUse)
regexUse = "[^aeiou]$"
str_count(words, regexUse)
str_detect(words, regexUse)
sum(str_detect(words, regexUse))
sum(str_count(words, regexUse))
length(words)
words[1]
words[2]
v = c()
for(i in 1:length(words)) {
v[i] = length(words[i])
}
length(words[2])
length(words[3])
words[3]
length(words[3])
words[3]...length()
nchar(words[3])
v = c()
for(i in 1:length(words)) {
v[i] = nchar(words[i])
}
library(tidyverse)
ggplot(data = df, aes(x = Value)) + geom_point()
df = data.frame(Value = vec)
v = c()
for(i in 1:length(words)) {
v[i] = nchar(words[i])
}
dfUse = data.frame(Value = vec)
v = c()
for(i in 1:length(words)) {
v[i] = nchar(words[i])
}
dfUse = data.frame(Value = v)
ggplot(data = dfUse, aes(x = Value)) + geom_point()
View(dfUse)
ggplot(data = dfUse, aes(x = id, y = Value)) + geom_point()
View(dfUse)
v = c()
for(i in 1:length(words)) {
v[i] = nchar(words[i])
}
hist(v)
runif(10)
runif(10, 1, 1000)
str_detect(words[1], "[^aeiou]$")
str_detect(words[1], "[^aeiou]$") === FALSE
str_detect(words[1], "[^aeiou]$") == FALSE
for(i in 1:1000) {
num = floor(runif(10, 1, length(words)))
count = 0;
for(j in 1:10) {
if(str_detect(words[num[j]], "[^aeiou]$")) {
count = count + 1
}
}
rateArray[i] = count / 10
}
rateArray = c()
for(i in 1:1000) {
num = floor(runif(10, 1, length(words)))
count = 0;
for(j in 1:10) {
if(str_detect(words[num[j]], "[^aeiou]$")) {
count = count + 1
}
}
rateArray[i] = count / 10
}
rateArray = c()
for(i in 1:1000) {
num = floor(runif(10, 1, length(words)))
count = 0;
for(j in 1:10) {
if(str_detect(words[num[j]], "[^aeiou]$")) {
count = count + 1
}
}
rateArray[i] = count / 10
}
hist(rateArray)
sum(str_count(words, regexUse))
sum(str_count(words, regexUse)) / length(words)
v
hist(v)
median_length <- median(nchar(words))
table1 = tibble(word = words)
View(table1)
table1 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, "短单词", "长单词"),
vowel_count = str_count(word, "[aeiou]")
)
View(table1)
ggplot(data, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
ggplot(table1, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
lm(vowel_count ~ type, data = table1)
table1 = tibble(word = words)
median_length <- median(nchar(words))
table1 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, "short", "long"),
vowel_count = str_count(word, "[aeiou]")
)
ggplot(table1, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
View(table1)
lm(vowel_count ~ type, data = table1)
dataUse = lm(vowel_count ~ type, data = table1)
summary(dataUse)
dataUse = lm(vowel_count ~ type, data = table1)
summary(dataUse)
dataUse = glm(vowel_count ~ type, data = table1)
summary(dataUse)
table1 = tibble(word = words)
median_length <- median(nchar(words))
table1 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, "short", "long"),
vowel_count = str_count(word, "[aeiou]")
)
ggplot(table1, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
View(table1)
dataUse = glm(vowel_count ~ type, data = table1)
summary(dataUse)
table1 = tibble(word = words)
median_length <- median(nchar(words))
table1 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, 0, 1),
vowel_count = str_count(word, "[aeiou]")
)
ggplot(table1, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
table1 = tibble(word = words)
median_length <- median(nchar(words))
table1 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, 'long', 'short'),
vowel_count = str_count(word, "[aeiou]")
)
ggplot(table1, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
table2 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, 1, 0),
vowel_count = str_count(word, "[aeiou]")
)
dataUse = glm(vowel_count ~ type, data = table2)
summary(dataUse)
table2 = table2 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, 1, 0),
vowel_count = str_count(word, "[aeiou]")
)
dataUse = lm(vowel_count ~ type, data = table2)
summary(dataUse)
table1 = tibble(word = words)
median_length <- median(nchar(words))
table1 = table1 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, 'short', 'long'),
vowel_count = str_count(word, "[aeiou]")
)
ggplot(table1, aes(x = vowel_count, fill = type)) +
geom_histogram(binwidth = 1, position = "dodge", color = "black") +
labs(
title = "单词元音个数与单词类型的分布",
x = "元音个数",
y = "频数",
fill = "单词类型"
) +
theme_minimal()
table2 = table2 %>%
mutate(
length = nchar(word),
type = if_else(length <= median_length, 0, 1),
vowel_count = str_count(word, "[aeiou]")
)
dataUse = lm(vowel_count ~ type, data = table2)
summary(dataUse)
View(table2)
table4 = clean_names(read.csv("./data/Quality.csv"))
library(janitor)
table4 = clean_names(read.csv("./data/Quality.csv"))
